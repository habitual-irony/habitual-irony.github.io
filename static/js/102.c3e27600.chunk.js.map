{"version":3,"file":"static/js/102.c3e27600.chunk.js","mappings":"uyNACO,MAAMA,EAAmBA,IACxB,sL,eCcR,MAoGA,EApGYC,KACR,MAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,QAAO,OAClBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KA+BrCG,EAAAA,EAAAA,YAAU,KACDT,IAELA,EAAOU,OAAOC,YAAY,WAAYC,GACtCZ,EAAOU,OAAOC,YAAY,eAAgBE,GAE1Cb,EAAOU,OAAOI,SAAS,gBAAe,GAEvC,CAACd,GAAQ,KAEZS,EAAAA,EAAAA,YAAU,KACNJ,EAAQP,EAAiB,GAC1B,IAuBH,OACIiB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAC,SAAA,EACDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAI,GAAIC,UAAW,OAAOJ,UAC5BC,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACHC,OAAO,aACPC,MAAM,OACNC,gBAAgB,OAChBC,MAAQtB,EACRuB,QAnDcjB,IAC1BR,EAAU0B,QAAUlB,CAAM,EAmDdmB,QAzEM,CAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,SAAU,GACVC,QAAS,CACLC,SAAS,GAEbC,QAAS,CAELC,iCAAiC,EACjCC,YAAa,IAEjBC,QAAS,CACLC,IAAK,GACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,IAEXC,QAAS,GAwDGC,SAjDYlB,IACxBrB,EAAQqB,EAAM,OAmDVR,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAI,GAAIC,UAAW,OAAOJ,UAC5BC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CAAA5B,UACFF,EAAAA,EAAAA,MAAC+B,EAAAA,EAAS,CAAA7B,SAAA,EACNC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAAA9B,SAAC,kBACZC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CAACC,MAAO,CAACC,WAAW,OAAOjC,SAChCV,YAKjBW,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAI,GAAIC,UAAW,gDAAgDJ,UACrEC,EAAAA,EAAAA,KAACiC,EAAAA,EAAO,CAACC,MAAM,UAAUC,QAAQ,UAAUC,KAAK,KAAKC,QA7CjDC,UACZ,MAAMpD,EAAOF,EAAU0B,QAAQ6B,WAC/BjD,EAAU,0DACV,MAAMkD,EAAO,CACTtD,cAEEuD,EAAAA,EACDC,KAAK,eAAgBF,GACrBG,MAAMC,IACHC,QAAQC,IAAIF,GACW,YAApBA,EAAIG,KAAK1D,OACRC,EAAUsD,EAAIG,KAAKC,QAEnB1D,EAAUsD,EAAIG,KAAKE,UAAUC,WAAW,IAAK,MACjD,IAEHC,OAAOC,IACJP,QAAQC,IAAIM,EAAI,GAClB,EA2ByEC,UAAQ,EAAAtD,SAAC,gBAEjF,C","sources":["Pages/Ide/defaultValues.js","Pages/Ide/Ide.js"],"sourcesContent":["\nexport const javaDefaultValue = () => {\n  return `// public class name 수정하면 안댐!!!!!\npublic class test {\n  public String runMethod() throws Exception {\n    return \"test입니다.\";\n  }\n}`;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport axios from '../../Components/AxiosInstance';\nimport Editor, { useMonaco } from '@monaco-editor/react';\nimport TomorrowDarkTheme from 'monaco-themes/themes/Tomorrow-Night.json';\nimport TomorrowTheme from 'monaco-themes/themes/Tomorrow.json';\nimport {\n    CRow,\n    CCol,\n    CButton,\n    CCard,\n    CCardBody,\n    CCardTitle,\n    CCardText\n} from '@coreui/react'\nimport { javaDefaultValue } from './defaultValues';\n\nconst Ide = () => {\n    const monaco = useMonaco();\n    const editorRef = useRef(null);\n    const [code, setCode] = useState('');\n    const [result, setResult] = useState('');\n\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        automaticLayout: true,\n        fontSize: 14,\n        minimap: {\n            enabled: true,\n        },\n        suggest: {\n            // 자동완성 제안 활성화\n            snippetsPreventQuickSuggestions: true,\n            suggestions: [],\n        },\n        padding: {\n            top: 10,\n            bottom: 10,\n            left: 20,\n            right: 20,\n        },\n        tabSize: 2,\n    };\n\n    const handleEditorDidMount = (editor) => {\n        editorRef.current = editor;\n    };\n\n    const handleEditorChange = (value) => {\n        setCode(value);\n    };\n\n    useEffect(() => {\n        if (!monaco) return;\n\n        monaco.editor.defineTheme('tomorrow', TomorrowTheme);\n        monaco.editor.defineTheme('tomorrowDark', TomorrowDarkTheme);\n\n        monaco.editor.setTheme('tomorrowDark');\n\n    }, [monaco, true]);\n\n    useEffect(() => {\n        setCode(javaDefaultValue);\n    }, [])\n\n    const compile = async () => {\n        const code = editorRef.current.getValue();\n        setResult('코드 컴파일 진행중 ...');\n        const Data = {\n            code\n        };\n        await axios\n            .post('/ide/compile', Data)\n            .then((res) => {\n                console.log(res);\n                if(res.data.result === \"success\") {\n                    setResult(res.data.return);\n                } else {\n                    setResult(res.data.SystemOut.replaceAll(\" \", \"  \"));\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <CRow>\n            <CCol xs={12} className={'mb-2'}>\n                <Editor\n                    height='calc(40vh)'\n                    width='100%'\n                    defaultLanguage='java'\n                    value= {code}\n                    onMount={handleEditorDidMount}\n                    options={editorOptions}\n                    onChange={handleEditorChange}\n                />\n            </CCol>\n            <CCol xs={12} className={'mb-2'}>\n                <CCard>\n                    <CCardBody>\n                        <CCardTitle>결과</CCardTitle>\n                        <CCardText style={{whiteSpace:'pre'}}>\n                            {result}\n                        </CCardText>\n                    </CCardBody>\n                </CCard>\n            </CCol>\n            <CCol xs={12} className={'d-grid gap-1 d-md-flex justify-content-md-end'}>\n                <CButton color=\"primary\" variant=\"outline\" size=\"lg\" onClick={compile} disabled>Compile</CButton>\n            </CCol>\n        </CRow>\n    )\n}\n\nexport default Ide\n"],"names":["javaDefaultValue","Ide","monaco","useMonaco","editorRef","useRef","code","setCode","useState","result","setResult","useEffect","editor","defineTheme","TomorrowTheme","TomorrowDarkTheme","setTheme","_jsxs","CRow","children","_jsx","CCol","xs","className","Editor","height","width","defaultLanguage","value","onMount","current","options","selectOnLineNumbers","automaticLayout","fontSize","minimap","enabled","suggest","snippetsPreventQuickSuggestions","suggestions","padding","top","bottom","left","right","tabSize","onChange","CCard","CCardBody","CCardTitle","CCardText","style","whiteSpace","CButton","color","variant","size","onClick","async","getValue","Data","axios","post","then","res","console","log","data","return","SystemOut","replaceAll","catch","err","disabled"],"sourceRoot":""}