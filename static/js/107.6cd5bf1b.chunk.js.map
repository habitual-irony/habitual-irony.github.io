{"version":3,"file":"static/js/107.6cd5bf1b.chunk.js","mappings":"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","sources":["Pages/Toast/ToastUIEditor.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\"; // Viewer css\nimport { Editor } from \"@toast-ui/react-editor\";\nimport Viewer from \"@toast-ui/editor/dist/toastui-editor-viewer\";\n\nimport \"tui-color-picker/dist/tui-color-picker.css\";\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\n\nimport \"@toast-ui/editor-plugin-table-merged-cell/dist/toastui-editor-plugin-table-merged-cell.css\";\nimport tableMergedCell from \"@toast-ui/editor-plugin-table-merged-cell\";\n\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nconst colorSyntaxOptions = {\n  preset: [\n    \"#333333\", \"#666666\", \"#FFFFFF\", \"#EE2323\", \"#F89009\", \"#009A87\", \"#006DD7\", \"#8A3DB6\",\n    \"#781B33\", \"#5733B1\", \"#953B34\", \"#FFC1C8\", \"#FFC9AF\", \"#9FEEC3\", \"#99CEFA\", \"#C1BEF9\",\n  ],\n};\n\nconst CONTENT_KEY = \"TOAST\";\n\nconst ToastEditor = () => {\n  const editorRef = useRef(null);\n  const [editMode, setEditMode] = useState(false);\n  let initData = `\n  <br/><br/>\n  # 제목\n\n  ***~~<span style=\"color: #EE2323\">내용</span>~~***\n  \n  * [x] 체크박스\n  * [ ] 체크박스 2\n\n  <br/><br/>`;\n\n  const handleSave = () => {\n    let markDownContent = editorRef.current.getInstance().getMarkdown();\n    localStorage.setItem(CONTENT_KEY, markDownContent);\n    setEditMode(!editMode);\n  };\n\n  const makePdf = async () => {\n    const paper = document.querySelector(\"#pdf-download\");\n\n    const canvas = await html2canvas(paper, { scale: 2 });\n    const imgData = canvas.toDataURL(\"image/png\", 1.0);\n\n    let imgWidth = 190; // 이미지 가로 길이(mm) / A4 기준 210mm\n    let pageHeight = imgWidth * 1.414;  // 출력 페이지 세로 길이 계산 A4 기준\n    let imgHeight = canvas.height * imgWidth / canvas.width;\n    let heightLeft = imgHeight;\n    let margin = 10; // 출력 페이지 여백설정\n    let doc = new jsPDF('p', 'mm');\n    let position = 0;\n    doc.addImage(imgData, 'PNG', margin, position, imgWidth, imgHeight);\n\n    // 첫 페이지 출력\n    doc.addImage(imgData, 'PNG', margin, position, imgWidth, imgHeight);\n    heightLeft -= pageHeight;\n\n    // 한 페이지 이상일 경우 루프 돌면서 출력\n    while (heightLeft >= 20) {\t\t\t// 35\n      position = heightLeft - imgHeight;\n      position = position - 20 ;\t\t// -25\n\n      doc.addPage();\n      doc.addImage(imgData, 'PNG', margin, position, imgWidth, imgHeight);\n      heightLeft -= pageHeight;\n    }\n\n    doc.save('toast.pdf');\n\n    window.open(doc.output(\"bloburl\"))\n\n    const pdf = new File([doc.output(\"blob\")], \"toast.pdf\", {\n      type: \"application/pdf\",\n    });\n\n    return pdf;\n\n  };\n\n  const init = async() => {\n    let item = localStorage.getItem(CONTENT_KEY);\n\n    if (editMode === false) {\n      const viewer = new Viewer({\n        el: document.querySelector(\".toast-editor-viewer\"),\n        viewer: true,\n        height: \"400px\",\n        usageStatistics: false, // 통계 수집 거부\n        plugins: [tableMergedCell],\n      });\n\n      if (item) viewer.setMarkdown(item);\n      else {\n        viewer.setMarkdown(initData);\n        localStorage.setItem(CONTENT_KEY, initData);\n      }\n    }\n\n    if (item) {\n      if (editorRef.current) editorRef.current.getInstance().setMarkdown(item);\n    } else {\n      if (editorRef.current) {\n        editorRef.current.getInstance().setMarkdown(initData);\n      }\n    }\n  }\n\n  useEffect(() => {\n    init();\n  }, [editMode]);\n\n  return (\n    <div>\n      <Box sx={{ m: 2 }}>\n        <h1>Toast UI Editor</h1>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          sx={{ m: 1 }}\n          onClick={() => setEditMode(!editMode)}\n        >\n          {editMode ? \"취소하기\" : \"편집하기\"}\n        </Button>\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            sx={{ m: 1 }}\n            onClick={makePdf}\n            disabled={editMode === true}\n        >\n          PDF로 저장\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          sx={{ m: 1 }}\n          onClick={handleSave}\n          disabled={editMode === false}\n        >\n          저장하기\n        </Button>\n\n        {editMode === false && <div id=\"pdf-download\" className=\"toast-editor-viewer\"></div>}\n\n        {editMode === true && (\n          <Editor\n            ref={editorRef}\n            height=\"400px\"\n            placeholder=\"Please Enter Text.\"\n            previewStyle=\"tab\" // or vertical\n            initialEditType=\"wysiwyg\" // or markdown\n            // hideModeSwitch={true} // 하단 숨기기\n            toolbarItems={[\n              // 툴바 옵션 설정\n              [\"heading\", \"bold\", \"italic\", \"strike\"],\n              [\"hr\", \"quote\"],\n              [\"ul\", \"ol\", \"task\", \"indent\", \"outdent\"],\n              [\"table\", /* \"image\", */ \"link\"],\n              [\"code\", \"codeblock\"],\n            ]}\n            //theme=\"dark\"\n            //useCommandShortcut={false} // 키보드 입력 컨트롤 방지 ex ctrl z 등\n            usageStatistics={false} // 통계 수집 거부\n            plugins={[[colorSyntax, colorSyntaxOptions], tableMergedCell]}\n          />\n        )}\n      </Box>\n    </div>\n\n  );\n};\n\nexport default ToastEditor;\n"],"names":["colorSyntaxOptions","preset","CONTENT_KEY","ToastEditor","editorRef","useRef","editMode","setEditMode","useState","initData","useEffect","async","item","localStorage","getItem","viewer","Viewer","el","document","querySelector","height","usageStatistics","plugins","tableMergedCell","setMarkdown","setItem","current","getInstance","init","_jsx","children","_jsxs","Box","sx","m","Button","variant","color","onClick","paper","canvas","html2canvas","scale","imgData","toDataURL","imgWidth","pageHeight","imgHeight","width","heightLeft","doc","jsPDF","position","addImage","addPage","save","window","open","output","File","type","disabled","handleSave","markDownContent","getMarkdown","id","className","Editor","ref","placeholder","previewStyle","initialEditType","toolbarItems","colorSyntax"],"sourceRoot":""}